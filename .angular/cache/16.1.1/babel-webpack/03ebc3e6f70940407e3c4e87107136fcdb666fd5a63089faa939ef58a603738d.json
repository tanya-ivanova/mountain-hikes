{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HikeDetailsComponent = class HikeDetailsComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.currentWeather = {\n      temp: 0,\n      text: '',\n      code: 0,\n      photo: 0,\n      date: ''\n    };\n    this.forecastWeather = [];\n  }\n  ngOnInit() {\n    this.weatherService.getCurrentWeather().subscribe(weather => {\n      this.currentWeather.temp = weather.current.temp_c;\n      this.currentWeather.text = weather.current.condition.text;\n      this.currentWeather.code = weather.current.condition.code;\n      const matchedCondition = weatherConditions.find(obj => obj.code === this.currentWeather.code);\n      this.currentWeather.photo = matchedCondition?.icon || 0;\n      const date = weather.forecast.forecastday[0].date;\n      const currentDate = new Date(date);\n      this.currentWeather.date = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\n      weather.forecast.forecastday.forEach(el => {\n        const forcastDay = {\n          minTemp: 0,\n          maxTemp: 0,\n          text: '',\n          code: 0,\n          photo: 0,\n          date: ''\n        };\n        const dateString = el.date;\n        const date = new Date(dateString);\n        const formattedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n        forcastDay.date = formattedDate;\n        forcastDay.minTemp = el.day.mintemp_c;\n        forcastDay.maxTemp = el.day.maxtemp_c;\n        forcastDay.text = el.day.condition.text;\n        forcastDay.code = el.day.condition.code;\n        const matchedCondition = weatherConditions.find(obj => obj.code === forcastDay.code);\n        forcastDay.photo = matchedCondition?.icon || 0;\n        this.forecastWeather.push(forcastDay);\n      });\n    });\n  }\n};\nHikeDetailsComponent = __decorate([Component({\n  selector: 'app-hike-details',\n  templateUrl: './hike-details.component.html',\n  styleUrls: ['./hike-details.component.css']\n})], HikeDetailsComponent);","map":{"version":3,"names":["Component","HikeDetailsComponent","constructor","weatherService","currentWeather","temp","text","code","photo","date","forecastWeather","ngOnInit","getCurrentWeather","subscribe","weather","current","temp_c","condition","matchedCondition","weatherConditions","find","obj","icon","forecast","forecastday","currentDate","Date","getDate","getMonth","getFullYear","forEach","el","forcastDay","minTemp","maxTemp","dateString","formattedDate","day","mintemp_c","maxtemp_c","push","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\mountain-hikes\\src\\app\\hike-details\\hike-details.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-hike-details',\n  templateUrl: './hike-details.component.html',\n  styleUrls: ['./hike-details.component.css']\n})\nexport class HikeDetailsComponent {\n  currentWeather: CurrentWeather = {\n    temp: 0,\n    text: '',\n    code: 0,\n    photo: 0,\n    date: ''\n  };\n\n  forecastWeather: ForecastWeather[] = [];\n\n  constructor (public weatherService: WeatherService) {}\n\n  ngOnInit () {\n    this.weatherService.getCurrentWeather().subscribe(weather => {    \n      this.currentWeather.temp = weather.current.temp_c;\n      this.currentWeather.text = weather.current.condition.text;\n      this.currentWeather.code = weather.current.condition.code;\n      const matchedCondition = weatherConditions.find(obj => obj.code === this.currentWeather.code);\n      this.currentWeather.photo = matchedCondition?.icon || 0;\n      const date = weather.forecast.forecastday[0].date;\n      const currentDate = new Date(date);\n      this.currentWeather.date = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\n\n      weather.forecast.forecastday.forEach((el: any) => {\n        const forcastDay: ForecastWeather = {\n          minTemp: 0,\n          maxTemp: 0,\n          text: '',\n          code: 0,\n          photo: 0,\n          date: ''\n        };\n        const dateString = el.date;\n        const date = new Date(dateString);        \n        const formattedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n        \n        forcastDay.date = formattedDate;\n        forcastDay.minTemp = el.day.mintemp_c;\n        forcastDay.maxTemp = el.day.maxtemp_c;\n        forcastDay.text = el.day.condition.text;\n        forcastDay.code = el.day.condition.code;\n\n        const matchedCondition = weatherConditions.find(obj => obj.code === forcastDay.code);\n        forcastDay.photo = matchedCondition?.icon || 0;\n\n        this.forecastWeather.push(forcastDay);\n      });\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}