{"ast":null,"code":"import { weatherConditions } from './weather_conditions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./weather.service\";\nimport * as i2 from \"./home/home.component\";\nimport * as i3 from \"./header/header.component\";\nimport * as i4 from \"./footer/footer.component\";\nimport * as i5 from \"./all-hikes/all-hikes.component\";\nimport * as i6 from \"./hike-details/hike-details.component\";\nimport * as i7 from \"./register/register.component\";\nimport * as i8 from \"./login/login.component\";\nimport * as i9 from \"./create-post/create-post.component\";\nimport * as i10 from \"./gallery/gallery.component\";\nexport class AppComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.title = 'mountain-hikes';\n    this.currentWeather = {\n      temp: 0,\n      text: '',\n      code: 0,\n      photo: 0,\n      date: ''\n    };\n    this.forecastWeather = [];\n  }\n  ngOnInit() {\n    this.weatherService.getCurrentWeather().subscribe(weather => {\n      this.currentWeather.temp = weather.current.temp_c;\n      this.currentWeather.text = weather.current.condition.text;\n      this.currentWeather.code = weather.current.condition.code;\n      const matchedCondition = weatherConditions.find(obj => obj.code === this.currentWeather.code);\n      this.currentWeather.photo = matchedCondition?.icon || 0;\n      const date = weather.forecast.forecastday[0].date;\n      const currentDate = new Date(date);\n      this.currentWeather.date = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\n      weather.forecast.forecastday.forEach(el => {\n        const forcastDay = {};\n        const dateString = el.date;\n        const date = new Date(dateString);\n        const formattedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n      });\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[\"alt\", \"weather\", 3, \"src\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Weather\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4, \"The Weather rigth now\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"img\", 0);\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"app-header\")(9, \"app-home\")(10, \"app-footer\")(11, \"app-all-hikes\")(12, \"app-hike-details\")(13, \"app-gallery\")(14, \"app-register\")(15, \"app-login\")(16, \"app-create-post\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate1(\"src\", \"../assets/\", ctx.currentWeather.photo, \".png\", i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\"\", ctx.currentWeather.text, \" - \", ctx.currentWeather.temp, \"\\u00B0C\");\n    }\n  },\n  dependencies: [i2.HomeComponent, i3.HeaderComponent, i4.FooterComponent, i5.AllHikesComponent, i6.HikeDetailsComponent, i7.RegisterComponent, i8.LoginComponent, i9.CreatePostComponent, i10.GalleryComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["weatherConditions","AppComponent","constructor","weatherService","title","currentWeather","temp","text","code","photo","date","forecastWeather","ngOnInit","getCurrentWeather","subscribe","weather","current","temp_c","condition","matchedCondition","find","obj","icon","forecast","forecastday","currentDate","Date","getDate","getMonth","getFullYear","forEach","el","forcastDay","dateString","formattedDate","i0","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate1","ɵɵsanitizeUrl","ɵɵtextInterpolate2"],"sources":["C:\\mountain-hikes\\src\\app\\app.component.ts","C:\\mountain-hikes\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core'\nimport { WeatherService } from './weather.service'\nimport { weatherConditions } from './weather_conditions'\nimport { CurrentWeather, ForecastWeather } from './types/Weather'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'mountain-hikes';\n  \n  currentWeather: CurrentWeather = {\n    temp: 0,\n    text: '',\n    code: 0,\n    photo: 0,\n    date: ''\n  };\n\n  forecastWeather: ForecastWeather[] = [];\n\n  constructor (public weatherService: WeatherService) {}\n\n  ngOnInit () {\n    this.weatherService.getCurrentWeather().subscribe(weather => {    \n      this.currentWeather.temp = weather.current.temp_c;\n      this.currentWeather.text = weather.current.condition.text;\n      this.currentWeather.code = weather.current.condition.code;\n      const matchedCondition = weatherConditions.find(obj => obj.code === this.currentWeather.code);\n      this.currentWeather.photo = matchedCondition?.icon || 0;\n      const date = weather.forecast.forecastday[0].date;\n      const currentDate = new Date(date);\n      this.currentWeather.date = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;\n\n      weather.forecast.forecastday.forEach((el: any) => {\n        const forcastDay = {};\n        const dateString = el.date;\n        const date = new Date(dateString);        \n        const formattedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n      })\n    })\n  }\n}\n","<div>\n    <h2>Weather</h2>\n    <p>The Weather rigth now</p>\n    <img src=\"../assets/{{currentWeather.photo}}.png\" alt=\"weather\">\n    <p>{{currentWeather.text}} - {{currentWeather.temp}}&#176;C</p>\n</div>\n<app-header />\n<app-home />\n<app-footer />\n\n<app-all-hikes />\n<app-hike-details />\n<app-gallery />\n\n<app-register />\n<app-login />\n<app-create-post />"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}