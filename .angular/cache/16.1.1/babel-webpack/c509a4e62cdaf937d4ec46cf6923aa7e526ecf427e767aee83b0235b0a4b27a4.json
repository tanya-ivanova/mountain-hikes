{"ast":null,"code":"import { weatherConditions } from './weather_conditions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./weather.service\";\nimport * as i2 from \"./home/home.component\";\nimport * as i3 from \"./header/header.component\";\nimport * as i4 from \"./footer/footer.component\";\nimport * as i5 from \"./all-hikes/all-hikes.component\";\nimport * as i6 from \"./hike-details/hike-details.component\";\nimport * as i7 from \"./register/register.component\";\nimport * as i8 from \"./login/login.component\";\nimport * as i9 from \"./create-post/create-post.component\";\nimport * as i10 from \"./gallery/gallery.component\";\nexport class AppComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.title = 'mountain-hikes';\n    // temp = undefined\n    // weatherText = ''\n    // weatherCode = undefined\n    // photo = 0\n    // date: Date = new Date();\n    this.currentWeather = {\n      temp: 0,\n      text: '',\n      code: 0,\n      photo: 0,\n      day: 0,\n      month: 0,\n      year: 0\n    };\n  }\n  ngOnInit() {\n    this.weatherService.getCurrentWeather().subscribe(weather => {\n      // this.temp = weather.current.temp_c\n      // this.weatherText = weather.current.condition.text\n      // this.weatherCode = weather.current.condition.code\n      // const test = weatherConditions.find(obj => obj.code === this.weatherCode)\n      // this.photo = test?.icon || 0; \n      // const currentDate = weather.forecast.forecastday[0].date;\n      // weather.forecast.forecastday.forEach((element:any) => {\n      //   console.log(element);\n      // });\n      // this.date = new Date(currentDate)\n      // const day = this.date.getDate();    \n      // const month = this.date.getMonth();    \n      // const year = this.date.getFullYear()\n      this.currentWeather.temp = weather.current.temp_c;\n      this.currentWeather.text = weather.current.condition.text;\n      this.currentWeather.code = weather.current.condition.code;\n      const matchedCondition = weatherConditions.find(obj => obj.code === this.currentWeather.code);\n      this.currentWeather.photo = matchedCondition?.icon || 0;\n      const date = weather.forecast.forecastday[0].date;\n      const currentDate = new Date(date);\n      this.currentWeather.day = currentDate.getDate();\n      this.currentWeather.month = currentDate.getMonth() + 1;\n      this.currentWeather.year = currentDate.getFullYear();\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 17,\n  vars: 5,\n  consts: [[\"alt\", \"weather\", 3, \"src\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Weather\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"img\", 0);\n      i0.ɵɵelementStart(6, \"p\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"app-header\")(9, \"app-home\")(10, \"app-footer\")(11, \"app-all-hikes\")(12, \"app-hike-details\")(13, \"app-gallery\")(14, \"app-register\")(15, \"app-login\")(16, \"app-create-post\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.currentWeather.text);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate1(\"src\", \"../assets/\", ctx.currentWeather.photo, \".png\", i0.ɵɵsanitizeUrl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate3(\"\", ctx.currentWeather.day, \"/\", ctx.currentWeather.month, \"/\", ctx.currentWeather.year, \"\");\n    }\n  },\n  dependencies: [i2.HomeComponent, i3.HeaderComponent, i4.FooterComponent, i5.AllHikesComponent, i6.HikeDetailsComponent, i7.RegisterComponent, i8.LoginComponent, i9.CreatePostComponent, i10.GalleryComponent],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["weatherConditions","AppComponent","constructor","weatherService","title","currentWeather","temp","text","code","photo","day","month","year","ngOnInit","getCurrentWeather","subscribe","weather","current","temp_c","condition","matchedCondition","find","obj","icon","date","forecast","forecastday","currentDate","Date","getDate","getMonth","getFullYear","i0","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵpropertyInterpolate1","ɵɵsanitizeUrl","ɵɵtextInterpolate3"],"sources":["C:\\mountain-hikes\\src\\app\\app.component.ts","C:\\mountain-hikes\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core'\nimport { WeatherService } from './weather.service'\nimport { weatherConditions } from './weather_conditions'\nimport { CurrentWeather } from './types/Weather'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'mountain-hikes'\n  // temp = undefined\n  // weatherText = ''\n  // weatherCode = undefined\n  // photo = 0\n  // date: Date = new Date();\n  currentWeather: CurrentWeather = {\n    temp: 0,\n    text: '',\n    code: 0,\n    photo: 0,\n    day: 0,\n    month: 0,\n    year: 0\n  }\n\n  constructor (public weatherService: WeatherService) {}\n\n  ngOnInit () {\n    this.weatherService.getCurrentWeather().subscribe(weather => {\n      // this.temp = weather.current.temp_c\n      // this.weatherText = weather.current.condition.text\n      // this.weatherCode = weather.current.condition.code\n      // const test = weatherConditions.find(obj => obj.code === this.weatherCode)\n      // this.photo = test?.icon || 0; \n      // const currentDate = weather.forecast.forecastday[0].date;\n      // weather.forecast.forecastday.forEach((element:any) => {\n      //   console.log(element);\n      // });\n      // this.date = new Date(currentDate)\n      // const day = this.date.getDate();    \n      // const month = this.date.getMonth();    \n      // const year = this.date.getFullYear()\n      \n      this.currentWeather.temp = weather.current.temp_c;\n      this.currentWeather.text = weather.current.condition.text;\n      this.currentWeather.code = weather.current.condition.code;\n      const matchedCondition = weatherConditions.find(obj => obj.code === this.currentWeather.code);\n      this.currentWeather.photo = matchedCondition?.icon || 0;\n      const date = weather.forecast.forecastday[0].date;\n      const currentDate = new Date(date);\n      this.currentWeather.day = currentDate.getDate();\n      this.currentWeather.month = currentDate.getMonth() + 1;\n      this.currentWeather.year = currentDate.getFullYear();\n    })\n  }\n}\n","<div>\n    <h2>Weather</h2>\n    <p>{{currentWeather.text}}</p>\n    <img src=\"../assets/{{currentWeather.photo}}.png\" alt=\"weather\">\n    <p>{{currentWeather.day}}/{{currentWeather.month}}/{{currentWeather.year}}</p>\n</div>\n<app-header />\n<app-home />\n<app-footer />\n\n<app-all-hikes />\n<app-hike-details />\n<app-gallery />\n\n<app-register />\n<app-login />\n<app-create-post />"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}